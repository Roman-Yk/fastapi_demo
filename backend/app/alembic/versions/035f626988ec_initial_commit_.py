"""Initial commit_

Revision ID: 035f626988ec
Revises:
Create Date: 2025-06-26 15:16:50.852410

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "035f626988ec"
down_revision = None
branch_labels = None
depends_on = None

from app.database.models.orders.enums import OrderServiceType
from app.database.models._shared.ProcessStatus import ProcessStatusType


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "drivers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("phone", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_drivers_id"), "drivers", ["id"], unique=False)
    op.create_table(
        "terminals",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("time_zone", sa.String(length=64), nullable=False),
        sa.Column("address", sa.String(length=256), nullable=True),
        sa.Column("short_name", sa.String(length=64), nullable=True),
        sa.Column("account_code", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_terminals_id"), "terminals", ["id"], unique=False)
    op.create_table(
        "trailers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("license_plate", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_trailers_id"), "trailers", ["id"], unique=False)
    op.create_table(
        "trucks",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("license_plate", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_trucks_id"), "trucks", ["id"], unique=False)
    op.create_table(
        "orders",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("reference", sa.String(length=32), nullable=True),
        sa.Column("service", OrderServiceType(), nullable=True),
        sa.Column("eta_date", sa.Date(), nullable=True),
        sa.Column("eta_time", sa.Time(), nullable=True),
        sa.Column("etd_date", sa.Date(), nullable=True),
        sa.Column("etd_time", sa.Time(), nullable=True),
        sa.Column("commodity", sa.String(length=256), nullable=True),
        sa.Column("pallets", sa.Integer(), nullable=True),
        sa.Column("boxes", sa.Integer(), nullable=True),
        sa.Column("kilos", sa.Float(), nullable=True),
        sa.Column("notes", sa.String(length=1024), nullable=True),
        sa.Column("priority", sa.Boolean(), nullable=True),
        sa.Column("terminal_id", sa.UUID(), nullable=True),
        sa.Column(
            "created_at", sa.Date(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.Date(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("eta_driver_id", sa.UUID(), nullable=True),
        sa.Column("eta_trailer_id", sa.UUID(), nullable=True),
        sa.Column("eta_truck_id", sa.UUID(), nullable=True),
        sa.Column("eta_driver", sa.String(length=256), nullable=True),
        sa.Column("eta_driver_phone", sa.String(length=32), nullable=True),
        sa.Column("eta_truck", sa.String(length=256), nullable=True),
        sa.Column("eta_trailer", sa.String(length=256), nullable=True),
        sa.Column("etd_driver_id", sa.UUID(), nullable=True),
        sa.Column("etd_trailer_id", sa.UUID(), nullable=True),
        sa.Column("etd_truck_id", sa.UUID(), nullable=True),
        sa.Column("etd_driver", sa.String(length=256), nullable=True),
        sa.Column("etd_driver_phone", sa.String(length=32), nullable=True),
        sa.Column("etd_truck", sa.String(length=256), nullable=True),
        sa.Column("etd_trailer", sa.String(length=256), nullable=True),
        sa.ForeignKeyConstraint(
            ["eta_driver_id"],
            ["drivers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["eta_trailer_id"],
            ["trailers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["eta_truck_id"],
            ["trucks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["etd_driver_id"],
            ["drivers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["etd_trailer_id"],
            ["trailers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["etd_truck_id"],
            ["trucks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["terminal_id"],
            ["terminals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_orders_id"), "orders", ["id"], unique=False)
    op.create_table(
        "order_documents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("order_id", sa.UUID(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("src", sa.String(), nullable=True),
        sa.Column("thumbnail", sa.String(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "CMR",
                "Packing_list",
                "Export_documents",
                "Other",
                "Moving_report",
                "Excel_list_for_plukk",
                "Invoice",
                "Loading_chart",
                "Off_loading_chart",
                "Bill_og_loading",
                "SAD",
                "T1",
                "MIO",
                "Deviation_report",
                "Label",
                "Pictures",
                "Company_plukk_list",
                "Plukk_list_scanned",
                "ThreePL_FourPL",
                name="orderdocumenttype",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_document_text",
        sa.Column("order_document_id", sa.UUID(), nullable=False),
        sa.Column("order_id", sa.UUID(), nullable=False),
        sa.Column("order_created_at", sa.DateTime(), nullable=False),
        sa.Column("text_created_at", sa.DateTime(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("process_status", ProcessStatusType(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_document_id"],
            ["order_documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("order_document_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_document_text")
    op.drop_table("order_documents")
    op.drop_index(op.f("ix_orders_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_trucks_id"), table_name="trucks")
    op.drop_table("trucks")
    op.drop_index(op.f("ix_trailers_id"), table_name="trailers")
    op.drop_table("trailers")
    op.drop_index(op.f("ix_terminals_id"), table_name="terminals")
    op.drop_table("terminals")
    op.drop_index(op.f("ix_drivers_id"), table_name="drivers")
    op.drop_table("drivers")
    # ### end Alembic commands ###
